import_community_tools:
  stage: toolsImporter
  variables:
    GIT_SSL_NO_VERIFY: "true"
  tags: 
   - kubernetes
   - linux
  image: gcr.io/$GCP_PROJECT_ID/linuxutils:latest
  only:
    variables:
      - $IMPORT_TOOLS
      - $DEPLOYMENT_INIT
    changes:
      - ci-tools-controllers/.tools-index.json
  script:
    - 'cd ci-tools-controllers'
    - cat .tools-index.json | jq '.community[].name' > community-tools-names.txt
    - 'curl --insecure --header "PRIVATE-TOKEN: $GITLAB_API_ACCESS" $CI_SERVER_URL/api/v4/groups/community/projects?per_page=100 > existing-projects.json' # will break after 100 tools
    - 'curl --insecure --header "PRIVATE-TOKEN: $GITLAB_API_ACCESS" $CI_SERVER_URL/api/v4/groups/community > community-group-details.json'
    - cat existing-projects.json  | jq '.[].name' > existing-projects-names.txt
    - "grep -vxFfexisting-projects-names.txt community-tools-names.txt > tools-to-import.txt"
    - cat tools-to-import.txt
    - COMMUNITY_NAMESPACE_ID=$(jq '.id' community-group-details.json) # Extracting community group namespace ID to point community tools on which namespace to be imported.
    - "jq '.community | map(. + {namespace_id: '$COMMUNITY_NAMESPACE_ID'})' .tools-index.json > .tools-index_with-namespaces.json"
    - "for p in $(cat tools-to-import.txt); do cat .tools-index_with-namespaces.json | jq '.[] | select(.name=='$p')' | curl -k -d @- -H 'Content-Type: application/json' -H  'PRIVATE-TOKEN: '$GITLAB_API_ACCESS $CI_SERVER_URL/api/v4/projects ; done"